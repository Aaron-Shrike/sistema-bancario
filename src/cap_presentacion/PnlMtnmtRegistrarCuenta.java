/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cap_presentacion;

import cap_logica.Cliente;
import cap_logica.Cuenta;
import cap_logica.Moneda;
import cap_logica.Strings;
import java.awt.Color;
import java.sql.Date;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Sh
 */
public class PnlMtnmtRegistrarCuenta extends javax.swing.JPanel {
    
    private boolean encontrado = false;

    /**
     * Creates new form PnlMtnmtRegistrarCuenta
     */
    public PnlMtnmtRegistrarCuenta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        imgCuenta = new javax.swing.JLabel();
        txNumero = new javax.swing.JLabel();
        tfNumCuenta = new javax.swing.JTextField();
        txFechaApertura = new javax.swing.JLabel();
        dcFechaAper = new com.toedter.calendar.JDateChooser();
        txMontoInicial = new javax.swing.JLabel();
        tfMontoInicial = new javax.swing.JTextField();
        txTipoMoneda = new javax.swing.JLabel();
        cbTipoMoneda = new javax.swing.JComboBox<>();
        txEstado = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox<>();
        txDniCliente = new javax.swing.JLabel();
        tfDniCliente = new javax.swing.JTextField();
        btBuscar = new javax.swing.JButton();
        btLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taInfo = new javax.swing.JTextArea();
        btAddCuenta = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));
        setLayout(new java.awt.GridBagLayout());

        imgCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imgRegCuenta.jpg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        add(imgCuenta, gridBagConstraints);

        txNumero.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txNumero.setText("NÃºmero:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txNumero, gridBagConstraints);

        tfNumCuenta.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfNumCuenta.setForeground(new java.awt.Color(153, 153, 153));
        tfNumCuenta.setText(Strings.ejmNumeroCuenta);
        tfNumCuenta.setPreferredSize(new java.awt.Dimension(450, 35));
        tfNumCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfNumCuentaMousePressed(evt);
            }
        });
        tfNumCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNumCuentaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNumCuentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(tfNumCuenta, gridBagConstraints);

        txFechaApertura.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txFechaApertura.setText("Fecha de apertura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txFechaApertura, gridBagConstraints);

        dcFechaAper.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dcFechaAper.setOpaque(false);
        dcFechaAper.setPreferredSize(new java.awt.Dimension(450, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(dcFechaAper, gridBagConstraints);

        txMontoInicial.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txMontoInicial.setText("Monto inicial:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txMontoInicial, gridBagConstraints);

        tfMontoInicial.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfMontoInicial.setForeground(new java.awt.Color(153, 153, 153));
        tfMontoInicial.setText(Strings.ejmMontoInicial);
        tfMontoInicial.setPreferredSize(new java.awt.Dimension(450, 35));
        tfMontoInicial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfMontoInicialMousePressed(evt);
            }
        });
        tfMontoInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMontoInicialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfMontoInicialKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(tfMontoInicial, gridBagConstraints);

        txTipoMoneda.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txTipoMoneda.setText("Tipo de moneda:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txTipoMoneda, gridBagConstraints);

        cbTipoMoneda.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cbTipoMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccionar -", "SOLES", "DOLARES", "EUROS" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(cbTipoMoneda, gridBagConstraints);

        txEstado.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txEstado.setText("Estado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txEstado, gridBagConstraints);

        cbEstado.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccionar -", "ABIERTA", "CERRADA" }));
        cbEstado.setSelectedIndex(1);
        cbEstado.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(cbEstado, gridBagConstraints);

        txDniCliente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txDniCliente.setText("DNI cliente:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(txDniCliente, gridBagConstraints);

        tfDniCliente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tfDniCliente.setForeground(new java.awt.Color(153, 153, 153));
        tfDniCliente.setText(Strings.ejmDni);
        tfDniCliente.setPreferredSize(new java.awt.Dimension(450, 35));
        tfDniCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfDniClienteMousePressed(evt);
            }
        });
        tfDniCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDniClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfDniClienteKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        add(tfDniCliente, gridBagConstraints);

        btBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscarx32.png"))); // NOI18N
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 30, 0, 0);
        add(btBuscar, gridBagConstraints);

        btLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiarx32.png"))); // NOI18N
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
        add(btLimpiar, gridBagConstraints);

        taInfo.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        taInfo.setEnabled(false);
        taInfo.setPreferredSize(new java.awt.Dimension(450, 37));
        jScrollPane1.setViewportView(taInfo);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 100, 0, 50);
        add(jScrollPane1, gridBagConstraints);

        btAddCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/addCuentax48.png"))); // NOI18N
        btAddCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddCuentaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 0);
        add(btAddCuenta, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddCuentaActionPerformed
        // TODO add your handling code here:
        try{
            Color negro = new Color(0,0,0);
            Color rojo = new Color(255,51,51);
            
            //'encontrado' tipo (boolean) para verificar si encontro a un cliente ya existende en nuestra BD
            if(encontrado && tfNumCuenta.getForeground().equals(negro)  && tfDniCliente.getForeground().equals(negro)){  
                Cuenta objCue = new Cuenta();
                
                objCue.setNumeroCuenta(tfNumCuenta.getText()); 
                    Date fecha = new Date(dcFechaAper.getDate().getTime());
                objCue.setFechaApertura(fecha);
                objCue.setMontoInicial(Double.parseDouble(tfMontoInicial.getText()));
                    switch(cbTipoMoneda.getSelectedIndex()){
                        case 1: objCue.setTipoMoneda(Moneda.SOLES);
                            break;
                        case 2: objCue.setTipoMoneda(Moneda.DOLARES);
                            break;
                        case 3: objCue.setTipoMoneda(Moneda.EUROS);
                            break;
                        default: JOptionPane.showMessageDialog(this,"Selecione un tipo de moneda",
                            "MENSAJE DEL SISTEMA", JOptionPane.INFORMATION_MESSAGE);
                    }
                //objCue.setTipoEstado();
                objCue.setDniCliente(tfDniCliente.getText());

                objCue.agregar();//Exception

                JOptionPane.showMessageDialog(this,"Cuenta REGISTRADA",
                            "MENSAJE DEL SISTEMA", JOptionPane.INFORMATION_MESSAGE); 

                tfDniCliente.setEnabled(true); 
                
                tfNumCuenta.setText(Strings.ejmNumeroCuenta);
                tfNumCuenta.setCaretPosition(0);
                tfNumCuenta.setForeground(new Color(153,153,153));
                
                dcFechaAper.setDate(null);
                
                tfMontoInicial.setText(Strings.ejmMontoInicial);
                tfMontoInicial.setCaretPosition(0);
                tfMontoInicial.setForeground(new Color(153,153,153));
                
                cbTipoMoneda.setSelectedIndex(0);
                
                //cbEstado.setSelectedIndex(1);
                
                tfDniCliente.setText(Strings.ejmDni);
                tfDniCliente.setCaretPosition(0);
                tfDniCliente.setForeground(new Color(153,153,153));
                
                taInfo.setText("");
                
                tfNumCuenta.requestFocus();
                
            }else if(tfNumCuenta.getForeground().equals(rojo)){
                JOptionPane.showMessageDialog(this,"Numero de cuenta con LETRAS",
                            "ERROR DEL SISTEMA", JOptionPane.ERROR_MESSAGE);
                
            }else if(!encontrado){
                JOptionPane.showMessageDialog(this,"Primero debe buscar un cliente",
                    "MENSAJE DEL SISTEMA", JOptionPane.INFORMATION_MESSAGE);
                
            }else if(tfDniCliente.getForeground().equals(rojo)){
                JOptionPane.showMessageDialog(this,"DNI con LETRAS",
                            "ERROR DEL SISTEMA", JOptionPane.ERROR_MESSAGE);
                
            }
            
        }catch(Exception  error){
            JOptionPane.showMessageDialog(this,error.getMessage(),
                        "ERROR DEL SISTEMA", JOptionPane.ERROR_MESSAGE);        
        }
    }//GEN-LAST:event_btAddCuentaActionPerformed

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        // TODO add your handling code here:
        encontrado = false;
        
        tfDniCliente.setEnabled(true);
        
        tfDniCliente.setText(Strings.ejmDni);
        tfDniCliente.setCaretPosition(0);
        tfDniCliente.setForeground(new Color(153,153,153));
        
        taInfo.setText("");
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        // TODO add your handling code here:
        try{
            String dniCliente = tfDniCliente.getText();
            Cliente objCli = new Cliente();

            ResultSet  resultado = objCli.buscarPorDni(dniCliente);

            while (resultado.next()){
                String auxNombre = resultado.getString("nombre_cliente");
                String auxApellidoPaterno = resultado.getString("apellido_paterno_cliente");
                String auxApellidoMaterno = resultado.getString("apellido_materno_cliente");

                taInfo.setText("Nombre: " + auxNombre +
                    "\nAp. Paterno: " + auxApellidoPaterno +
                    "\nAp. Materno: " + auxApellidoMaterno);

                encontrado = true;
                tfDniCliente.setEnabled(false);  
            }

            if(!encontrado){
                taInfo.setText("Cliente no encontrado");

                JOptionPane.showMessageDialog(this,"Cliente NO ENCONTRADO",
                    "MENSAJE DEL SISTEMA", JOptionPane.INFORMATION_MESSAGE);
            }

        }catch(Exception error){
            JOptionPane.showMessageDialog(this,error.getMessage(),
                "ERROR DEL SISTEMA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    /*
        DETALLES DE TEXT FIELD: 
            inicio del caret;
            color de letras. gris - ejemplo, rojo - incorrecto, negro - correcto;
            text field vacio = texto de ejemplo;
    */
    
    private void tfNumCuentaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfNumCuentaMousePressed
        // TODO add your handling code here:
        if(tfNumCuenta.getText().equals(Strings.ejmNumeroCuenta)){

            tfNumCuenta.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfNumCuentaMousePressed

    private void tfNumCuentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumCuentaKeyPressed
        // TODO add your handling code here:
        if(tfNumCuenta.getText().equals(Strings.ejmNumeroCuenta)){

            tfNumCuenta.setForeground(new Color(0,0,0));
            tfNumCuenta.setText("");
        }
    }//GEN-LAST:event_tfNumCuentaKeyPressed

    private void tfNumCuentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumCuentaKeyReleased
        // TODO add your handling code here:
        boolean letra = false;
        
        if(tfNumCuenta.getCaretPosition() == 0 && tfNumCuenta.getText().equals("")){

            tfNumCuenta.setText(Strings.ejmNumeroCuenta);
            tfNumCuenta.setForeground(new Color(153,153,153));
            tfNumCuenta.setCaretPosition(0);
        }else{

            for (int i = 0; i < tfNumCuenta.getText().length(); i++) {
                char c = tfNumCuenta.getText().charAt(i);

                if(c != '1' && c != '2' && c != '3' && c != '4' && c != '5'
                    && c != '6' && c != '7' && c != '8' && c != '9' && c != '0'){

                    letra = true;
                }
            }
            
            if(letra == true || tfNumCuenta.getText().length() > 20){
                tfNumCuenta.setForeground(new Color(255,51,51)); // rojo
            }else{
                tfNumCuenta.setForeground(new Color(0,0,0)); // negro
            }
        }
    }//GEN-LAST:event_tfNumCuentaKeyReleased

    private void tfMontoInicialMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfMontoInicialMousePressed
        // TODO add your handling code here:
        if(tfMontoInicial.getText().equals(Strings.ejmMontoInicial)){

            tfMontoInicial.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfMontoInicialMousePressed

    private void tfMontoInicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMontoInicialKeyPressed
        // TODO add your handling code here:
        if(tfMontoInicial.getText().equals(Strings.ejmMontoInicial)){

            tfMontoInicial.setForeground(new Color(0,0,0));
            tfMontoInicial.setText("");
        }
    }//GEN-LAST:event_tfMontoInicialKeyPressed

    private void tfMontoInicialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMontoInicialKeyReleased
        // TODO add your handling code here:
        boolean letra = false;
        
        if(tfMontoInicial.getCaretPosition() == 0 && tfMontoInicial.getText().equals("")){

            tfMontoInicial.setText(Strings.ejmMontoInicial);
            tfMontoInicial.setForeground(new Color(153,153,153));
            tfMontoInicial.setCaretPosition(0);
        }else{

            for (int i = 0; i < tfMontoInicial.getText().length(); i++) {
                char c = tfMontoInicial.getText().charAt(i);

                if(c != '1' && c != '2' && c != '3' && c != '4' && c != '5'
                    && c != '6' && c != '7' && c != '8' && c != '9' && c != '0' && c != '.'){

                    letra = true;
                }
            }
            
            if(letra == true){
                tfMontoInicial.setForeground(new Color(255,51,51)); // rojo
            }else{
                tfMontoInicial.setForeground(new Color(0,0,0)); // negro
            }
        }
    }//GEN-LAST:event_tfMontoInicialKeyReleased

    private void tfDniClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfDniClienteMousePressed
        // TODO add your handling code here:
        if(tfDniCliente.getText().equals(Strings.ejmDni)){

            tfDniCliente.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfDniClienteMousePressed

    private void tfDniClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDniClienteKeyPressed
        // TODO add your handling code here:
        if(tfDniCliente.getText().equals(Strings.ejmDni)){

            tfDniCliente.setForeground(new Color(0,0,0));
            tfDniCliente.setText("");
        }
    }//GEN-LAST:event_tfDniClienteKeyPressed

    private void tfDniClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDniClienteKeyReleased
        // TODO add your handling code here:
        boolean letra = false;
        
        if(tfDniCliente.getCaretPosition() == 0 && tfDniCliente.getText().equals("")){

            tfDniCliente.setText(Strings.ejmDni);
            tfDniCliente.setForeground(new Color(153,153,153));
            tfDniCliente.setCaretPosition(0);
        }else{

            for (int i = 0; i < tfDniCliente.getText().length(); i++) {
                char c = tfDniCliente.getText().charAt(i);

                if(c != '1' && c != '2' && c != '3' && c != '4' && c != '5'
                    && c != '6' && c != '7' && c != '8' && c != '9' && c != '0'){

                    letra = true;
                }
            }
            
            if(letra == true || tfDniCliente.getText().length() > 8){
                tfDniCliente.setForeground(new Color(255,51,51)); // rojo
            }else{
                tfDniCliente.setForeground(new Color(0,0,0)); // negro
            }
        }
    }//GEN-LAST:event_tfDniClienteKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddCuenta;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JComboBox<String> cbTipoMoneda;
    private com.toedter.calendar.JDateChooser dcFechaAper;
    private javax.swing.JLabel imgCuenta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taInfo;
    private javax.swing.JTextField tfDniCliente;
    private javax.swing.JTextField tfMontoInicial;
    private javax.swing.JTextField tfNumCuenta;
    private javax.swing.JLabel txDniCliente;
    private javax.swing.JLabel txEstado;
    private javax.swing.JLabel txFechaApertura;
    private javax.swing.JLabel txMontoInicial;
    private javax.swing.JLabel txNumero;
    private javax.swing.JLabel txTipoMoneda;
    // End of variables declaration//GEN-END:variables
}
